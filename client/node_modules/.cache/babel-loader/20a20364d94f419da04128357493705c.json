{"ast":null,"code":"import { call, put, takeLatest, all } from \"redux-saga/effects\";\nimport { convertCollectionSnapshotToMap, firestore } from \"../../firebase/firebase.utils\";\nimport { fetchCollectionFailure, fetchCollectionSuccess } from \"./shop.actions\";\nimport ShopActionTypes from \"./shop.types\";\nexport function* fetchCollectionAsync() {\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get();\n    const collectionMap = yield call(convertCollectionSnapshotToMap, snapshot);\n    yield put(fetchCollectionSuccess(collectionMap));\n  } catch (error) {\n    yield put(fetchCollectionFailure(error.message));\n  }\n}\nexport function* fetchCollectionStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionAsync);\n}\nexport function* shopSagas() {\n  yield all([call(fetchCollectionStart)]);\n}","map":{"version":3,"sources":["/home/hp/Documents/crwn-clothing/client/src/redux/shop/shop.sagas.js"],"names":["call","put","takeLatest","all","convertCollectionSnapshotToMap","firestore","fetchCollectionFailure","fetchCollectionSuccess","ShopActionTypes","fetchCollectionAsync","collectionRef","collection","snapshot","get","collectionMap","error","message","fetchCollectionStart","FETCH_COLLECTIONS_START","shopSagas"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,UAApB,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,SACEC,8BADF,EAEEC,SAFF,QAGO,+BAHP;AAIA,SAASC,sBAAT,EAAiCC,sBAAjC,QAA+D,gBAA/D;AACA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,oBAAV,GAAiC;AACtC,MAAI;AACF,UAAMC,aAAa,GAAGL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,aAAa,GAAG,MAAMd,IAAI,CAACI,8BAAD,EAAiCQ,QAAjC,CAAhC;AACA,UAAMX,GAAG,CAACM,sBAAsB,CAACO,aAAD,CAAvB,CAAT;AACD,GALD,CAKE,OAAOC,KAAP,EAAc;AACd,UAAMd,GAAG,CAACK,sBAAsB,CAACS,KAAK,CAACC,OAAP,CAAvB,CAAT;AACD;AACF;AAED,OAAO,UAAUC,oBAAV,GAAiC;AACtC,QAAMf,UAAU,CACdM,eAAe,CAACU,uBADF,EAEdT,oBAFc,CAAhB;AAID;AAED,OAAO,UAAUU,SAAV,GAAsB;AAC3B,QAAMhB,GAAG,CAAC,CAACH,IAAI,CAACiB,oBAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { call, put, takeLatest, all } from \"redux-saga/effects\";\nimport {\n  convertCollectionSnapshotToMap,\n  firestore,\n} from \"../../firebase/firebase.utils\";\nimport { fetchCollectionFailure, fetchCollectionSuccess } from \"./shop.actions\";\nimport ShopActionTypes from \"./shop.types\";\n\nexport function* fetchCollectionAsync() {\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get();\n    const collectionMap = yield call(convertCollectionSnapshotToMap, snapshot);\n    yield put(fetchCollectionSuccess(collectionMap));\n  } catch (error) {\n    yield put(fetchCollectionFailure(error.message));\n  }\n}\n\nexport function* fetchCollectionStart() {\n  yield takeLatest(\n    ShopActionTypes.FETCH_COLLECTIONS_START,\n    fetchCollectionAsync\n  );\n}\n\nexport function* shopSagas() {\n  yield all([call(fetchCollectionStart)]);\n}\n"]},"metadata":{},"sourceType":"module"}