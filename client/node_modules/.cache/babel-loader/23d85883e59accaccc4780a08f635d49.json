{"ast":null,"code":"import ShopActionTypes from \"./shop.types\";\nimport { firestore, convertCollectionSnapshotToMap } from \"../../firebase/firebase.utils\"; // export const updateCollections = (collectionsMap) => ({\n//   type: ShopActionTypes.UPDATE_COLLECTIONS,\n//   payload: collectionsMap,\n// });\n\nexport const fetchCollectionStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionSuccess = collectionMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionMap\n});\nexport const fetchCollectionFailure = errorMessage => ({\n  type: ShopActionTypes.fetchCollectionFailure,\n  payload: errorMessage\n});\nexport const fetchCollectionStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection(\"collections\");\n    dispatch(fetchCollectionStart());\n    collectionRef.get().then(snapshot => {\n      const collectionMap = convertCollectionSnapshotToMap(snapshot);\n      dispatch(fetchCollectionSuccess(collectionMap)); // this.setState({ loading: false });\n    }).catch(error => dispatch(fetchCollectionFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["/home/hp/Documents/crwn-clothing/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionSnapshotToMap","fetchCollectionStart","type","FETCH_COLLECTIONS_START","fetchCollectionSuccess","collectionMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionFailure","errorMessage","fetchCollectionStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","error","message"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SACEC,SADF,EAEEC,8BAFF,QAGO,+BAHP,C,CAKA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,oBAAoB,GAAG,OAAO;AACzCC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADmB,CAAP,CAA7B;AAIP,OAAO,MAAMC,sBAAsB,GAAIC,aAAD,KAAoB;AACxDH,EAAAA,IAAI,EAAEJ,eAAe,CAACQ,yBADkC;AAExDC,EAAAA,OAAO,EAAEF;AAF+C,CAApB,CAA/B;AAKP,OAAO,MAAMG,sBAAsB,GAAIC,YAAD,KAAmB;AACvDP,EAAAA,IAAI,EAAEJ,eAAe,CAACU,sBADiC;AAEvDD,EAAAA,OAAO,EAAEE;AAF8C,CAAnB,CAA/B;AAKP,OAAO,MAAMC,yBAAyB,GAAG,MAAM;AAC7C,SAAQC,QAAD,IAAc;AACnB,UAAMC,aAAa,GAAGb,SAAS,CAACc,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACV,oBAAoB,EAArB,CAAR;AAEAW,IAAAA,aAAa,CACVE,GADH,GAEGC,IAFH,CAESC,QAAD,IAAc;AAClB,YAAMX,aAAa,GAAGL,8BAA8B,CAACgB,QAAD,CAApD;AACAL,MAAAA,QAAQ,CAACP,sBAAsB,CAACC,aAAD,CAAvB,CAAR,CAFkB,CAGlB;AACD,KANH,EAOGY,KAPH,CAOUC,KAAD,IAAWP,QAAQ,CAACH,sBAAsB,CAACU,KAAK,CAACC,OAAP,CAAvB,CAP5B;AAQD,GAZD;AAaD,CAdM","sourcesContent":["import ShopActionTypes from \"./shop.types\";\nimport {\n  firestore,\n  convertCollectionSnapshotToMap,\n} from \"../../firebase/firebase.utils\";\n\n// export const updateCollections = (collectionsMap) => ({\n//   type: ShopActionTypes.UPDATE_COLLECTIONS,\n//   payload: collectionsMap,\n// });\n\nexport const fetchCollectionStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START,\n});\n\nexport const fetchCollectionSuccess = (collectionMap) => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionMap,\n});\n\nexport const fetchCollectionFailure = (errorMessage) => ({\n  type: ShopActionTypes.fetchCollectionFailure,\n  payload: errorMessage,\n});\n\nexport const fetchCollectionStartAsync = () => {\n  return (dispatch) => {\n    const collectionRef = firestore.collection(\"collections\");\n    dispatch(fetchCollectionStart());\n\n    collectionRef\n      .get()\n      .then((snapshot) => {\n        const collectionMap = convertCollectionSnapshotToMap(snapshot);\n        dispatch(fetchCollectionSuccess(collectionMap));\n        // this.setState({ loading: false });\n      })\n      .catch((error) => dispatch(fetchCollectionFailure(error.message)));\n  };\n};\n"]},"metadata":{},"sourceType":"module"}